@model WebCalendar.Models.MeetingViewModel

@{
    ViewBag.Title = "Edit";
    ViewBag.CurrentPage = "Meeting";
}

@{
    var grid = new WebGrid(source: ViewBag.Contacts,
        defaultSort: "FirstName",
        rowsPerPage: 15,
        canSort: true,
        canPage: false);
}

@functions
{
    public string IsChecked(int contactID)
    {
        foreach (var item in Model.ContactModels)
        {
            if(item.ContactID == contactID)
            {
                return "<text><input class=\"check-box\"  id=\"assignChkBx\"name=\"assignChkBx\" type=\"checkbox\" value=\""+contactID+"\" checked=\"checked\"/></text>";
            }
        }
        return "<text><input class=\"check-box\"  id=\"assignChkBx\"name=\"assignChkBx\" type=\"checkbox\" value=\""+contactID+"\"/></text>";
    }
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

        <div class="editor-label">
            @Html.LabelFor(model => model.Time)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Time, new { @class = "login-text datepicker" })
            @Html.ValidationMessageFor(model => model.Time)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Description, new { @class = "login-text" })
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Place)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Place, new { @class = "login-text" })
            @Html.ValidationMessageFor(model => model.Place)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Category, "Category")
        </div>
    
        <div class="editor-field">
            @Html.DropDownList("CategoryID", String.Empty)
        </div>
        <div>
            <a id="open-dialog" class="link" href="#">Add Contacts</a>
        </div>
        <div id="dialog" title="Contacts">
	        <div id="grid">
                @grid.GetHtml(
                tableStyle: "grid",
                headerStyle: "head",
                alternatingRowStyle: "webgrid-alternating-row",
                columns: grid.Columns(
                grid.Column(
                        format: (item) => new HtmlString(@IsChecked(item.ContactID))),
                    grid.Column(format: (item) => new HtmlString(item.FirstName)),
                    grid.Column(format: (item) => new HtmlString(item.LastName))))
            </div>
        </div>
        

        <p>
            <input type="submit" value="Save" />
            @Html.ActionLink("Back to List", "AllMeetings", null, new { @class = "link" })
        </p>
}
