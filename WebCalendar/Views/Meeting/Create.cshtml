@model WebCalendar.Models.MeetingViewModel

@{
    ViewBag.Title = "Create";
    ViewBag.CurrentPage = "Meeting";
}

@{
    var grid = new WebGrid(source: Model.ContactModels, ajaxUpdateContainerId: "grid",
        defaultSort: "FirstName",
        canSort: true,
        canPage: false);
}
<h2>Create</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div id="add-item">
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.ValidationMessageFor(model => model.Time)
    @Html.ValidationMessageFor(model => model.Description)
    @Html.ValidationMessageFor(model => model.Place)

        <div class="editor-label">
            @Html.LabelFor(model => model.Time)
            @Html.TextBoxFor(model => model.Time, new { @class = "input-text datepicker" })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
            @Html.TextBoxFor(model => model.Description, new { @class = "input-text" })
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Place)
            @Html.TextBoxFor(model => model.Place, new { @class = "input-text" })
           
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Category, "Category")
            @Html.DropDownList("CategoryID", String.Empty)
        </div>
        <div>
            <a id="open-dialog" class="link" href="#">Add Contacts</a>
        </div>
        <div id="dialog" title="Assign contacts">
            <div id="grid">
            @grid.GetHtml(
            tableStyle: "grid",
            headerStyle: "head",
            alternatingRowStyle: "webgrid-alternating-row",
            columns: grid.Columns(
                grid.Column(
                    format: @<text><input class="check-box"  id="assignChkBx"name="assignChkBx" type="checkbox" value="@item.ContactID"/></text>),
                grid.Column(format: (item) => new HtmlString(item.FirstName)),
                grid.Column(format: (item) => new HtmlString(item.LastName))))
            </div>
        </div>
        <p>
            <input type="submit" value="Create" />
            @Html.ActionLink("Back to List", "Index", null, new { @class = "link" })
        </p>
}
<img src="../images/meeting-logo.png" alt="meeting" />
</div>